From: =?utf-8?q?Fr=C3=A9d=C3=A9ric_Bonnard?= <frediz@debian.org>
Date: Tue, 21 Aug 2018 14:22:26 +0200
Subject: Fix FTBFS on s390x

https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=906798
In last upstream version, HTM related code has changed and fails on
s390x. This is a attempt to fix things basically.
---
 src/sphmultipcqueue.cpp       | 10 ++++++----
 src/tests/sphmultipcqueue_t.c |  4 ++++
 2 files changed, 10 insertions(+), 4 deletions(-)

diff --git a/src/sphmultipcqueue.cpp b/src/sphmultipcqueue.cpp
index 1340cba..3f72812 100644
--- a/src/sphmultipcqueue.cpp
+++ b/src/sphmultipcqueue.cpp
@@ -78,7 +78,11 @@ SPHMPMCQInitInternal (void *buf_seg, sas_type_t sasType,
 		      unsigned int stride, unsigned int options)
 {
 	unsigned long hwcap2 = getauxval(AT_HWCAP2);
+#ifdef __s390x__
+	if ((hwcap2 & HWCAP_S390_TE) == 0) {
+#else
 	if ((hwcap2 & PPC_FEATURE2_HAS_HTM) == 0) {
+#endif
 		fprintf(stderr,"MPMCQ requires Hardware Transactional Memory support.\n");
 		return NULL;
 	}
@@ -345,7 +349,6 @@ SPHMPMCQAllocStrideDirectHTM(SPHMPMCQ_t queue) {
 		const unsigned short stride = headerBlock->default_entry_stride;
 		const longPtr_t qlo = headerBlock->startq;
 		const longPtr_t qhi = headerBlock->endq;
-		TM_buff_type TM_buff;
 
 		entrytemp.detail.valid = 0;
 		entrytemp.detail.timestamped = 0;
@@ -355,7 +358,7 @@ SPHMPMCQAllocStrideDirectHTM(SPHMPMCQ_t queue) {
 		entrytemp.detail.subcat = 0;
 		entrytemp.detail.len = (stride / DEFAULT_ALLOC_UNIT);
 
-		if (__TM_begin (TM_buff) == _HTM_TBEGIN_STARTED) {
+		if (__TM_simple_begin () == _HTM_TBEGIN_STARTED) {
 			/* Transaction State Initiated. */
 			entryPtr = SPHMPMCQAdvanceHead((SPHLFEntryHeader_t **)&headerBlock->qhead,entrytemp.idUnit,entryfree.idUnit,stride,qlo,qhi);
 			__TM_end ();
@@ -426,8 +429,7 @@ SPHMPMCQGetNextCompleteDirectHTM (SPHMPMCQ_t queue)
 		const unsigned short stride = headerBlock->default_entry_stride;
 		const longPtr_t qlo = headerBlock->startq;
 		const longPtr_t qhi = headerBlock->endq;
-		TM_buff_type TM_buff;
-		if (__TM_begin (TM_buff) == _HTM_TBEGIN_STARTED) {
+		if (__TM_simple_begin () == _HTM_TBEGIN_STARTED) {
 			/* Transaction State Initiated. */
 			entryPtr = SPHMPMCQAdvanceTail((SPHLFEntryHeader_t **)&headerBlock->qtail,stride,qlo,qhi);
 			__TM_end ();
diff --git a/src/tests/sphmultipcqueue_t.c b/src/tests/sphmultipcqueue_t.c
index b9d254a..7bd2589 100644
--- a/src/tests/sphmultipcqueue_t.c
+++ b/src/tests/sphmultipcqueue_t.c
@@ -912,7 +912,11 @@ void compute_stats(unsigned long count, sphtimer_t delta, double *per, double *r
 int
 main(int argc, char *argv[]) {
 	unsigned long hwcap2 = getauxval(AT_HWCAP2);
+#ifdef __s390x__
+	if ((hwcap2 & HWCAP_S390_TE) == 0) {
+#else
 	if ((hwcap2 & PPC_FEATURE2_HAS_HTM) == 0) {
+#endif
 		fprintf(stderr,"MPMCQ requires Hardware Transactional Memory support.\n");
 		exit(0);
 	}
